// List To Data Table

public static DataTable ToDataTable<T>(this IList<T> data)
        {
            PropertyDescriptorCollection properties =
                TypeDescriptor.GetProperties(typeof(T));
            DataTable table = new DataTable();
            foreach (PropertyDescriptor prop in properties)
                table.Columns.Add(prop.Name, Nullable.GetUnderlyingType(prop.PropertyType) ?? prop.PropertyType);
            foreach (T item in data)
            {
                DataRow row = table.NewRow();
                foreach (PropertyDescriptor prop in properties)
                    row[prop.Name] = prop.GetValue(item) ?? DBNull.Value;
                table.Rows.Add(row);
            }
            return table;
        }


DataTable TO Custom Object

private static List<T> ConvertDataTable<T>(DataTable dt)
    {
            List<T> data = new List<T>();
            foreach (DataRow row in dt.Rows)
            {
                T item = GetItem<T>(row);
                data.Add(item);
            }
            return data;
    }
private static T GetItem<T>(DataRow dr)
    {
            Type temp = typeof(T);
            T obj = Activator.CreateInstance<T>();

            foreach (DataColumn column in dr.Table.Columns)
            {
                foreach (PropertyInfo pro in temp.GetProperties())
                {
                    if (pro.Name == column.ColumnName)
                        pro.SetValue(obj, dr[column.ColumnName], null);
                    else
                        continue;
                }
            }
            return obj;
    }  
    
    //Email Helper
    
     public static void EmailSender(string subject, string message, string sender)
       {
           string SmtpClientUrl = "smtp.gmail.com";
           int SmtpClientPort = 587;
           //string EmailUser = "mediasoftcrm@gmail.com";
           //string EmailPass = "01917653491";
           string EmailUser = ConfigurationManager.AppSettings["SenderEmail"];
           string EmailPass = ConfigurationManager.AppSettings["SenderPassword"];


           using (MailMessage mailMessage = new MailMessage())
           {
               using (SmtpClient smtpClient = new SmtpClient(SmtpClientUrl, SmtpClientPort))
               {
                   smtpClient.EnableSsl = true;
                   mailMessage.To.Add(sender);
                   mailMessage.From = new MailAddress(EmailUser);
                   mailMessage.Subject = subject;

                   mailMessage.Body = message;
                   mailMessage.IsBodyHtml = true;
                   smtpClient.Credentials = new System.Net.NetworkCredential(EmailUser, EmailPass);

                   //if (!string.IsNullOrEmpty(attachFileName))
                   //    mailMessage.Attachments.Add(new Attachment(attachFileName));

                   try
                   {
                       smtpClient.Send(mailMessage);
                   }
                   catch (Exception ex)
                   {
                       throw new Exception(ex.Message, ex.InnerException);
                   }
               }
           }
       }
       
